# Devilbox
# Path to devilbox
devilbox_path=~/projects/work/devilbox
# Service alias docker php container start
alias php_container='docker-compose up -d httpd php mysql mailhog'

start_devilbox() {
    cd $devilbox_path;
    if [[ -f "env" ]] ; then
        echo " Сервер php запущен \n Остановить сервер командой \n finish_devilbox";
    elif [[ -z "$1" ]] ; then
        echo " Задайте версию php сервера: \n $0 6 \n $0 7 \n $0 8";
    elif ! [[ -f .env-$1 ]] ; then
        echo " Неверная версия php сервера";
    elif ! [[ -f "env" ]] ; then
        mv .env env && mv .env-$1 .env && php_container && echo " server php-$1 start";
    else
        echo " Неизвестная ошибка";
    fi
}

finish_devilbox() {
    if ! [[ -f "env" ]] ; then
        echo " Нет запущенных php серверов";
    elif [[ -z "$1" ]] ; then
        echo " Выберите версию php сервера для останова: \n $0 6 \n $0 7 \n $0 8";
    elif [[ -f .env-$1 ]] ; then
        echo " Неверная версия php сервера";
    elif [[ -f "env" && -f ".env" && ! -f .env-$1 && $1 -gt 5 && $1 -lt 9 ]] ; then
        docker-compose stop && mv .env .env-$1 && mv env .env && echo " server php-$1 finish";
    else
        echo " Версия php сервера может быть: \n 6, \n 7, \n 8";
    fi
}

# Browser-sync
sync_site() {
    cd $devilbox_path/data;
    browser-sync start -p https://'wp-'$1.loc -f "**/*.php";
}

# Wp start
wp_start() {
    cd $devilbox_path/data;
    mkdir 'wp-'$1 && cd 'wp-'$1;
    curl -O https://wordpress.org/latest.zip;
    unzip latest.zip;
    mv wordpress htdocs;
    rm latest.zip;
    cp -r ~/projects/work/_s-template $devilbox_path/data/'wp-'$1/htdocs;
    sudo nano /etc/hosts;
    start_devilbox 7;
    sleep 5;
    google-chrome-stable http://localhost:80/vhosts.php;
    code $devilbox_path/data/'wp-'$1/htdocs;
}

# Wp latest
wp_latest() {
    cd $devilbox_path/data/data;
    mkdir 'wp-'$1 && cd 'wp-'$1;
    curl -O https://wordpress.org/latest.zip;
    unzip latest.zip;
    mv wordpress htdocs;
    rm latest.zip;
    cp -r ~/projects/work/_s-template $devilbox_path/data/data/'wp-'$1/htdocs;
    sudo nano /etc/hosts;
    start_devilbox 8;
    sleep 5;
    google-chrome-stable http://localhost:80/vhosts.php;
    code $devilbox_path/data/data/'wp-'$1/htdocs;
}

# -a == &&
# -o == ||
# -eq is equal to - равняется ( = or == )
# -ne is not equal to - не равняется ( != )
# -gt is greater than - больше чем ( > )
# -ge is greater than or equal to - больше или равно ( >= )
# -lt is less than - меньше чем ( < )
# -le  is less than or equal to - меньше или равно ( <= )

# -z Строка пустая, то есть имеет длинну равную нулю (string is null, that is, has zero length)
# -n Строка не пустая (string is not null)

# -e    Проверить существует ли файл или директория (-f, -d)
# -f    Файл существует (!-f - не существует)
# -d    Каталог существует (!-f - не существует)
# -s    Файл существует и он не пустой
# -r    Файл существует и доступен для чтения
# -w    ... для записи
# -x    ... для выполнения
# -h    cимвольная ссылка

# if [ -r somefile ]; then
#   content=$(cat somefile) // выводим содержимое somefile
#   elif [ -f somefile ];
#   then
#       echo "Файл 'somefile' существует, но недоступен для чтения сценарию"
#   else
#       echo "Файл 'somefile' не существует"
# fi

